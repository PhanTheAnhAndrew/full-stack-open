{"version":3,"sources":["services.js","components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","personService","getAll","axios","get","then","res","data","createPerson","newObj","post","deletePerson","obj","delete","id","updatePerson","put","Filter","filter","onChange","value","PersonForm","persons","onSubmit","onUpdate","onClearError","useState","newName","setNewName","newNumber","setNewNumber","evt","preventDefault","existedName","some","each","name","flag","window","confirm","existedPerson","find","newPerson","number","target","type","Persons","onDelete","filteredPersons","includes","map","onClick","person","Notification","message","className","App","setPersons","setFilter","errorMessage","setErrorMessage","useEffect","concat","catch","error","response","alert","newPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f5b9fbd.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((res) => res.data);\r\n};\r\n\r\nconst createPerson = (newObj) => {\r\n  const request = axios.post(baseUrl, newObj);\r\n  return request.then((res) => res.data);\r\n};\r\n\r\nconst deletePerson = (obj) => {\r\n  const request = axios.delete(`${baseUrl}/${obj.id}`);\r\n  return request.then(() => true);\r\n};\r\n\r\nconst updatePerson = (obj) => {\r\n  const request = axios.put(`${baseUrl}/${obj.id}`, obj);\r\n  return request.then((res) => res.data);\r\n};\r\n\r\nconst personService = {\r\n  getAll,\r\n  createPerson,\r\n  deletePerson,\r\n  updatePerson,\r\n};\r\n\r\nexport default personService;\r\n","import React from \"react\";\r\n\r\nfunction Filter({ filter, onChange }) {\r\n  return (\r\n    <div>\r\n      filter shown with: <input value={filter} onChange={onChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction PersonForm({ persons, onSubmit, onUpdate, onClearError }) {\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const handleChangeNewNumber = (evt) => {\r\n    setNewNumber(evt.target.value);\r\n    onClearError();\r\n  };\r\n  const handleChangeNewName = (evt) => {\r\n    setNewName(evt.target.value);\r\n    onClearError();\r\n  };\r\n\r\n  const handleSubmitForm = (evt) => {\r\n    evt.preventDefault();\r\n    const existedName = persons.some((each) => each.name === newName);\r\n    let flag = false;\r\n    if (\r\n      (existedName &&\r\n        window.confirm(\r\n          `${newName} is already added to phonebook, replace the old number with the new one?`\r\n        )) ||\r\n      !existedName\r\n    ) {\r\n      flag = true;\r\n    }\r\n    if (!flag) {\r\n      return;\r\n    }\r\n    setNewName(\"\");\r\n    setNewNumber(\"\");\r\n    if (existedName) {\r\n      const existedPerson = persons.find((each) => each.name === newName);\r\n      const newPerson = { ...existedPerson, name: newName, number: newNumber };\r\n      onUpdate(newPerson);\r\n    } else {\r\n      const newPerson = {\r\n        name: newName,\r\n        number: newNumber,\r\n      };\r\n      onSubmit(newPerson);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmitForm}>\r\n      <div>\r\n        name: <input value={newName} onChange={handleChangeNewName} />\r\n      </div>\r\n      <br />\r\n      <div>\r\n        number: <input value={newNumber} onChange={handleChangeNewNumber} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nfunction Persons({ persons, filter, onDelete }) {\r\n  const filteredPersons = persons.filter((each) => each.name.includes(filter));\r\n\r\n  const handleDelete = (person) => () => {\r\n    if (window.confirm(`Delete ${person.name}?`)) {\r\n      onDelete(person);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {filteredPersons.map((each) => (\r\n        <p key={each.id}>\r\n          {each.name} {each.number}{\" \"}\r\n          <button onClick={handleDelete(each)}>delete</button>\r\n        </p>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Persons;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nfunction Notification({ message }) {\r\n  if (!message) {\r\n    return null;\r\n  }\r\n\r\n  return <div className=\"error\">{message}</div>;\r\n}\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\n\nimport personService from \"./services\";\n\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  useEffect(() => {\n    personService.getAll().then((res) => {\n      setPersons(res);\n    });\n  }, []);\n\n  const handleChangeFilter = (evt) => setFilter(evt.target.value);\n\n  const handleSubmitForm = (newPerson) => {\n    personService\n      .createPerson(newPerson)\n      .then((res) => {\n        setPersons(persons.concat(res));\n        setErrorMessage(`Added ${newPerson.name}`);\n      })\n      .catch((error) => {\n        setErrorMessage(error.response.data.error);\n      });\n  };\n\n  const handleDeletePerson = (person) => {\n    personService\n      .deletePerson(person)\n      .then((res) => {\n        if (res) {\n          const newPersons = persons.filter((each) => each.id !== person.id);\n          setPersons(newPersons);\n          setErrorMessage(`Deleted ${person.name}`);\n        } else {\n          setErrorMessage(\n            `Information of ${person.name} has already been removed from server`\n          );\n        }\n      })\n      .catch((error) => {\n        setErrorMessage(error.response.data.error);\n      });\n  };\n\n  const handleUpdatePerson = (person) => {\n    personService\n      .updatePerson(person)\n      .then((res) => {\n        setPersons(persons.map((each) => (each.id !== res.id ? each : res)));\n        setErrorMessage(`Updated ${person.name}`);\n      })\n      .catch(() => {\n        alert(`the person ${person.name} was already deleted from server`);\n        setPersons(persons.filter((each) => each.id !== person.id));\n      });\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} />\n      <Filter filter={filter} onChange={handleChangeFilter} />\n      <h2>Add a new</h2>\n      <PersonForm\n        persons={persons}\n        onSubmit={handleSubmitForm}\n        onUpdate={handleUpdatePerson}\n        onClearError={() => setErrorMessage(\"\")}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        filter={filter}\n        persons={persons}\n        onDelete={handleDeletePerson}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}